version: "3.8"
services:
  postgres:
    container_name: postgres
    image: localhost:5000/postgres
    build: ./db/.
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main
    ports:
      - 5432
    networks:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  fastapi:
    container_name: fastapi
    image: localhost:5000/fastapi
    build: ./api/.
    ports:
      - 8000
    networks:
      - db
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@db:5432/main
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  frontend:
    container_name: frontend
    image: localhost:5000/frontend
    build: 
      context: ./frontend/.
      args:
        - NODE_ENV=production
        - API_URL=fastapi:3000
    environment:
      API_URL: fastapi:3000
    networks:
      - db
    ports:
      - 8000:3000
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

networks:
  db:
    name: db
  
